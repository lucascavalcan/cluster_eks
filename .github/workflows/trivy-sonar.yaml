name: Scan sandbox-github-actions with Trivy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Trivy scan
        run: |
          trivy conf --ignorefile .trivyignore --format json -o trivy-infra-core.json .

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-infra-core.json

  process-report:
    runs-on: ubuntu-latest
    needs: trivy-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Trivy report
        uses: actions/download-artifact@v4
        with:
          name: trivy-report
          path: .

      - name: Create reports directory
        run: mkdir -p reports

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Run conversion script
        run: |
          python trivy.py

      - name: List files in reports directory
        run: ls -la ./reports/

      - name: Upload SonarQube report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: ./sonar_report.json

  upload-to-sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: process-report

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download SonarQube report
        uses: actions/download-artifact@v4
        with:
          name: sonar-report
          path: ./

      - name: Check SonarQube Server
        run: curl -I ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        with:
          args: '-Dsonar.branch.name=main'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
